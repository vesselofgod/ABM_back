{
  "openapi": "3.0.0",
  "info": {
    "title": "ABM Swagger RestFul API UI",
    "description": "Node.js RestFul API UI",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/register/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uid": {
                    "example": "asdfasdf"
                  },
                  "password": {
                    "example": "any"
                  },
                  "name": {
                    "example": "any"
                  },
                  "sex": {
                    "example": "any"
                  },
                  "birth": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "certificationKey": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register/checkUserIdExist": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uid": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register/certification": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imp_uid": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "description": "",
        "parameters": [
          {
            "name": "parameterName",
            "in": "body",
            "description": "hi",
            "required": true,
            "schema": {
              "type": "string",
              "example": "hi"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uid": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/setRegion": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "406": {
            "description": "Not Acceptable"
          }
        }
      }
    },
    "/profile/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/profile/checkUserNicknameExist": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nickname": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/setProfile": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nickname": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "hobby1": {
                    "example": "any"
                  },
                  "hobby2": {
                    "example": "any"
                  },
                  "hobby3": {
                    "example": "any"
                  },
                  "region": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/create/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "402": {
            "description": "Payment Required"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "content": {
                    "example": "any"
                  },
                  "category1": {
                    "example": "any"
                  },
                  "category2": {
                    "example": "any"
                  },
                  "category3": {
                    "example": "any"
                  },
                  "region1": {
                    "example": "any"
                  },
                  "region2": {
                    "example": "any"
                  },
                  "region3": {
                    "example": "any"
                  },
                  "date": {
                    "example": "any"
                  },
                  "TO": {
                    "example": "any"
                  },
                  "regularity": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/read/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/read/recruit": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "402": {
            "description": "Payment Required"
          }
        }
      }
    },
    "/read/{feed_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/delete/{fid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "fid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/update/{fid}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "fid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "402": {
            "description": "Payment Required"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "content": {
                    "example": "any"
                  },
                  "state": {
                    "example": "any"
                  },
                  "category1": {
                    "example": "any"
                  },
                  "category2": {
                    "example": "any"
                  },
                  "category3": {
                    "example": "any"
                  },
                  "region1": {
                    "example": "any"
                  },
                  "region2": {
                    "example": "any"
                  },
                  "region3": {
                    "example": "any"
                  },
                  "date": {
                    "example": "any"
                  },
                  "TO": {
                    "example": "any"
                  },
                  "regularity": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "in": "header",
        "bearerFormat": "JWT"
      }
    }
  }
}
